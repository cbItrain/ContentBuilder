<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark Panel container.  

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" alpha.disabled="0.5"
			 blendMode="normal" mouseEnabled="false" minWidth="131" minHeight="127" xmlns:mx="library://ns.adobe.com/flex/halo" 
			 creationComplete="cc()">
	
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.Panel")]
		]]>
	</fx:Metadata> 
	
	<fx:Script>
		<![CDATA[
			
			
			/* Define the skin elements that should not be colorized. 
			For panel, border and title backround are skinned, but the content area and title text are not. */
			static private const exclusions:Array = ["background", "titleDisplay", "contentGroup"];
			
			/** 
			 * @copy spark.skins.SparkSkin#colorizeExclusions
			 */     
			override public function get colorizeExclusions():Array {return exclusions;}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
//				if (getStyle("borderVisible") == true)
//				{
//					border.visible = true;
//					background.left = background.top = background.right = background.bottom = 1;
//					contents.left = contents.top = contents.right = contents.bottom = 1;
//				}
//				else
//				{
//					border.visible = false;
//					background.left = background.top = background.right = background.bottom = 0;
//					contents.left = contents.top = contents.right = contents.bottom = 0;
//				}
				
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
			
			private function cc():void
			{
				topGroup.addEventListener(MouseEvent.MOUSE_DOWN,handleDown);
				topGroup.addEventListener(MouseEvent.MOUSE_UP,handleUp);
			}
			private function handleDown(e:Event):void{
				this.hostComponent.startDrag();
			}
			private function handleUp(e:Event):void{
				this.hostComponent.stopDrag();
				//this.hostComponent.x += 20;
				//trace("host x: " + this.hostComponent.x);
			}
			
		]]>
		
	</fx:Script>
	<fx:Declarations>
		<s:DropShadowFilter id="dsf" quality="3" blurX="6" blurY="6" distance="3" alpha="0.3" angle="90" />
	</fx:Declarations>
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
		<s:State name="normalWithControlBar" stateGroups="withControls" />
		<s:State name="disabledWithControlBar" stateGroups="withControls" />
	</s:states>
	
	<s:Group left="0" right="0" top="0" bottom="0">
		
		<!-- top group mask -->
		<s:Group left="0" top="0" right="0" bottom="0" id="topGroupMask" >
			<s:Rect left="0" top="0" right="0" bottom="0">
				<s:fill>
					<s:SolidColor alpha="0"/>
				</s:fill>
			</s:Rect>
		</s:Group>
		
		<!-- bottom group mask -->
		<s:Group left="0" top="0" right="0" bottom="0" id="bottomGroupMask" 
				 includeIn="normalWithControlBar, disabledWithControlBar">
			<s:Rect left="0" top="0" right="0" bottom="0">
				<s:fill>
					<s:SolidColor alpha="0"/>
				</s:fill>
			</s:Rect>
		</s:Group>
		
		<!-- layer 1: border -->
		<s:Rect id="border" left="0" right="0" top="0" bottom="0">
			<s:stroke>
				<s:SolidColorStroke color="0x757575" alpha="1" weight="1" />
			</s:stroke>
		</s:Rect>
		
		<!-- layer 2: background fill -->
		<!--- Defines the appearance of the PanelSkin class's background. -->
		<s:Rect id="background" left="1" top="1" right="1" bottom="1" filters="{[dsf]}">
			<s:fill>
				<s:SolidColor color="0x999999" alpha="1"/>
			</s:fill>
		</s:Rect>
		
		<!-- layer 3: contents -->
		<s:Group left="0" right="0" top="0" bottom="0" id="contents">
			<s:layout>
				<s:VerticalLayout gap="0" horizontalAlign="justify" />
			</s:layout>
			
			<s:Group id="topGroup" mask="{topGroupMask}">
				
				<!-- layer 0: title bar fill -->
				<s:Rect id="tbFill" left="0" right="0" top="0" bottom="1">
					<s:fill>
						<s:LinearGradient rotation="90">
							<s:GradientEntry color="0xdcdcdc" />
							<s:GradientEntry color="0xc9c9c9" />
						</s:LinearGradient>
					</s:fill>
				</s:Rect>
				
				<!-- layer 2: title bar divider -->
				<s:Rect id="tbDiv" left="0" right="0" height="1" bottom="0">
					<s:fill>
						<s:SolidColor color="0x757575" />
					</s:fill>
				</s:Rect>
				
				<!-- layer 3: text -->
				<!--- Defines the appearance of the PanelSkin class's title bar. -->
				<s:HGroup left="9" right="3" top="0" bottom="1" minHeight="30" verticalAlign="middle">
					<s:Label id="titleDisplay" maxDisplayedLines="1" paddingTop="3" color="0x000000" fontWeight="bold"
							 verticalAlign="middle" fontSize="14"
							 >
					</s:Label>
				</s:HGroup>
			</s:Group>
			
			<!--
			Note: setting the minimum size to 0 here so that changes to the host component's
			size will not be thwarted by this skin part's minimum size.   This is a compromise,
			more about it here: http://bugs.adobe.com/jira/browse/SDK-21143
			-->
			<s:Group id="contentGroup" width="100%" height="100%" minWidth="0" minHeight="0">
			</s:Group>
			
		</s:Group>
	</s:Group>
</s:SparkSkin>
